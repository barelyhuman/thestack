// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Team {
  id        Int      @id @default(autoincrement())
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name       String
  TeamMember TeamMember[]
}

model User {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  email     String
  name      String?

  TeamMember    TeamMember[]
  ProjectMember ProjectMember[]
}

model TeamMember {
  id        Int      @id @default(autoincrement())
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Values / enum for `role` are in lib/constants
  role Int

  invitedEmail String?
  user         User?   @relation(fields: [userId], references: [id])
  userId       Int?
  team         Team    @relation(fields: [teamId], references: [id])
  teamId       Int
}

model Project {
  id        Int      @id @default(autoincrement())
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name          String
  description   String?
  deadline      DateTime?
  ProjectMember ProjectMember[]
  Timer         Timer[]
}

model ProjectMember {
  id        Int      @id @default(autoincrement())
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Values / enum for `role` are in lib/constants
  role Int

  project   Project @relation(fields: [projectId], references: [id])
  projectId Int
  user      User    @relation(fields: [userId], references: [id])
  userId    Int
}

model Timer {
  id        Int      @id @default(autoincrement())
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  project   Project? @relation(fields: [projectId], references: [id])
  projectId Int?
}

model Profile {
  id        Int      @id @default(autoincrement())
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // settings row
}

model Tokens {
  id        Int      @id @default(autoincrement())
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name              String
  email             String
  authToken         String?
  verifierToken     String?
  registrationToken String?
}
